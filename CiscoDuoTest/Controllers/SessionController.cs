using CiscoDuoTest.Models.DTOs.Request;
using CiscoDuoTest.Models.DTOs.Response;
using CiscoWrapper;
using CiscoWrapper.DTOs;
using CiscoWrapper.DTOs.Configuration;
using CiscoWrapper.DTOs.Request;
using CiscoWrapper.DTOs.Response;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Net.Http;
using System.Web.Http;

namespace CiscoDuoTest.Controllers
{
    public class SessionController : ApiController
    {
        private IAuthenticationService _authenticationService = new DuoAuthenticationService();

        public SessionController()
        {
            this._authenticationService.Configure(new AuthenticationConfiguration()
            {
                IntegrationKey = "DIVVHZ0RHVLS45YBHY1X",
                SecretKey = "xkrVltiarwU2NkoHd9QnvgK1oYKysuaaANbcpKgg",
                LoggingUrl = "api-c7bd84e3.duosecurity.com",
                PostBackUrl = "https://us-central1-ciscoduopoc.cloudfunctions.net/helloWorld"
            });
        }

        [HttpPost]
        public SingInResponse SingIn(SignInRequestFromUI request)
        {
            return this._authenticationService.SingIn(new SignInRequest()
            {
                UserName = request.UserName,
                UserHash = "bfeb1fffcd1178bd09cb853fff5f862fc92762ad", // AUTOGENERATED SHA1
            });
        }

        [HttpPost]
        public VerificationResponse VerifySession(VerifySessionRequestFromUI request)
        {
            bool sessionIsCorrect = this._authenticationService.VerifySession(new VerifySessionRequest()
            {
                UserHash = "bfeb1fffcd1178bd09cb853fff5f862fc92762ad",
                UserName = request.UserName,
                VerificationResponse = request.VerificationHash
            });
            return new VerificationResponse()
            {
                SessionIsActive = sessionIsCorrect
            };
        }
    }
}
